"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MapComponentMessages;
(function (MapComponentMessages) {
    MapComponentMessages["MAP_COMPONENT_MOUNTED"] = "MAP_COMPONENT_MOUNTED";
    MapComponentMessages["DOCUMENT_EVENT_LISTENER_ADDED"] = "DOCUMENT_EVENT_LISTENER_ADDED";
    MapComponentMessages["WINDOW_EVENT_LISTENER_ADDED"] = "WINDOW_EVENT_LISTENER_ADDED";
    MapComponentMessages["UNABLE_TO_ADD_EVENT_LISTENER"] = "UNABLE_TO_ADD_EVENT_LISTENER";
    MapComponentMessages["DOCUMENT_EVENT_LISTENER_REMOVED"] = "DOCUMENT_EVENT_LISTENER_REMOVED";
    MapComponentMessages["WINDOW_EVENT_LISTENER_REMOVED"] = "WINDOW_EVENT_LISTENER_REMOVED";
})(MapComponentMessages = exports.MapComponentMessages || (exports.MapComponentMessages = {}));
var MapEvent;
(function (MapEvent) {
    MapEvent["ON_MOVE_END"] = "onMoveEnd";
    MapEvent["ON_MOVE_START"] = "onMoveStart";
    MapEvent["ON_MOVE"] = "onMove";
    MapEvent["ON_RESIZE"] = "onResize";
    MapEvent["ON_UNLOAD"] = "onUnload";
    MapEvent["ON_VIEW_RESET"] = "onViewReset";
    MapEvent["ON_ZOOM_END"] = "onZoomEnd";
    MapEvent["ON_ZOOM_LEVELS_CHANGE"] = "onZoomLevelsChange";
    MapEvent["ON_ZOOM_START"] = "onZoomStart";
    MapEvent["ON_ZOOM"] = "onZoom";
    MapEvent["ON_MAP_CLICKED"] = "onMapClicked";
    MapEvent["ON_MAP_MARKER_CLICKED"] = "onMapMarkerClicked";
})(MapEvent = exports.MapEvent || (exports.MapEvent = {}));
var AnimationType;
(function (AnimationType) {
    AnimationType["BOUNCE"] = "bounce";
    AnimationType["FADE"] = "fade";
    AnimationType["PULSE"] = "pulse";
    AnimationType["JUMP"] = "jump";
    AnimationType["SPIN"] = "spin";
    AnimationType["WAGGLE"] = "waggle";
})(AnimationType = exports.AnimationType || (exports.AnimationType = {}));
var MapVectorLayerType;
(function (MapVectorLayerType) {
    MapVectorLayerType["CIRCLE"] = "Circle";
    MapVectorLayerType["CIRCLE_MARKER"] = "CircleMarker";
    MapVectorLayerType["POLYLINE"] = "Polyline";
    MapVectorLayerType["POLYGON"] = "Polygon";
    MapVectorLayerType["RECTANGLE"] = "Rectangle";
})(MapVectorLayerType = exports.MapVectorLayerType || (exports.MapVectorLayerType = {}));
var MapLayerTypes;
(function (MapLayerTypes) {
    MapLayerTypes["IMAGE_LAYER"] = "ImageOverlay";
    MapLayerTypes["TILE_LAYER"] = "TileLayer";
    MapLayerTypes["VECTOR_LAYER"] = "VectorLayer";
    MapLayerTypes["VIDEO_LAYER"] = "VideoOverlay";
    MapLayerTypes["WMS_TILE_LAYER"] = "WMSTileLayer";
})(MapLayerTypes = exports.MapLayerTypes || (exports.MapLayerTypes = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vV2ViVmlld0xlYWZsZXQvbW9kZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBWSxvQkFPWDtBQVBELFdBQVksb0JBQW9CO0lBQzlCLHVFQUErQyxDQUFBO0lBQy9DLHVGQUErRCxDQUFBO0lBQy9ELG1GQUEyRCxDQUFBO0lBQzNELHFGQUE2RCxDQUFBO0lBQzdELDJGQUFtRSxDQUFBO0lBQ25FLHVGQUErRCxDQUFBO0FBQ2pFLENBQUMsRUFQVyxvQkFBb0IsR0FBcEIsNEJBQW9CLEtBQXBCLDRCQUFvQixRQU8vQjtBQUVELElBQVksUUFhWDtBQWJELFdBQVksUUFBUTtJQUNsQixxQ0FBeUIsQ0FBQTtJQUN6Qix5Q0FBNkIsQ0FBQTtJQUM3Qiw4QkFBa0IsQ0FBQTtJQUNsQixrQ0FBc0IsQ0FBQTtJQUN0QixrQ0FBc0IsQ0FBQTtJQUN0Qix5Q0FBNkIsQ0FBQTtJQUM3QixxQ0FBeUIsQ0FBQTtJQUN6Qix3REFBNEMsQ0FBQTtJQUM1Qyx5Q0FBNkIsQ0FBQTtJQUM3Qiw4QkFBa0IsQ0FBQTtJQUNsQiwyQ0FBK0IsQ0FBQTtJQUMvQix3REFBNEMsQ0FBQTtBQUM5QyxDQUFDLEVBYlcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFhbkI7QUFFRCxJQUFZLGFBT1g7QUFQRCxXQUFZLGFBQWE7SUFDdkIsa0NBQWlCLENBQUE7SUFDakIsOEJBQWEsQ0FBQTtJQUNiLGdDQUFlLENBQUE7SUFDZiw4QkFBYSxDQUFBO0lBQ2IsOEJBQWEsQ0FBQTtJQUNiLGtDQUFpQixDQUFBO0FBQ25CLENBQUMsRUFQVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQU94QjtBQXNERCxJQUFZLGtCQU1YO0FBTkQsV0FBWSxrQkFBa0I7SUFDNUIsdUNBQWlCLENBQUE7SUFDakIsb0RBQThCLENBQUE7SUFDOUIsMkNBQXFCLENBQUE7SUFDckIseUNBQW1CLENBQUE7SUFDbkIsNkNBQXVCLENBQUE7QUFDekIsQ0FBQyxFQU5XLGtCQUFrQixHQUFsQiwwQkFBa0IsS0FBbEIsMEJBQWtCLFFBTTdCO0FBWUQsSUFBWSxhQU1YO0FBTkQsV0FBWSxhQUFhO0lBQ3ZCLDZDQUE0QixDQUFBO0lBQzVCLHlDQUF3QixDQUFBO0lBQ3hCLDZDQUE0QixDQUFBO0lBQzVCLDZDQUE0QixDQUFBO0lBQzVCLGdEQUErQixDQUFBO0FBQ2pDLENBQUMsRUFOVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQU14QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIE1hcENvbXBvbmVudE1lc3NhZ2VzIHtcclxuICBNQVBfQ09NUE9ORU5UX01PVU5URUQgPSAnTUFQX0NPTVBPTkVOVF9NT1VOVEVEJyxcclxuICBET0NVTUVOVF9FVkVOVF9MSVNURU5FUl9BRERFRCA9ICdET0NVTUVOVF9FVkVOVF9MSVNURU5FUl9BRERFRCcsXHJcbiAgV0lORE9XX0VWRU5UX0xJU1RFTkVSX0FEREVEID0gJ1dJTkRPV19FVkVOVF9MSVNURU5FUl9BRERFRCcsXHJcbiAgVU5BQkxFX1RPX0FERF9FVkVOVF9MSVNURU5FUiA9ICdVTkFCTEVfVE9fQUREX0VWRU5UX0xJU1RFTkVSJyxcclxuICBET0NVTUVOVF9FVkVOVF9MSVNURU5FUl9SRU1PVkVEID0gJ0RPQ1VNRU5UX0VWRU5UX0xJU1RFTkVSX1JFTU9WRUQnLFxyXG4gIFdJTkRPV19FVkVOVF9MSVNURU5FUl9SRU1PVkVEID0gJ1dJTkRPV19FVkVOVF9MSVNURU5FUl9SRU1PVkVEJ1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBNYXBFdmVudCB7XHJcbiAgT05fTU9WRV9FTkQgPSAnb25Nb3ZlRW5kJyxcclxuICBPTl9NT1ZFX1NUQVJUID0gJ29uTW92ZVN0YXJ0JyxcclxuICBPTl9NT1ZFID0gJ29uTW92ZScsXHJcbiAgT05fUkVTSVpFID0gJ29uUmVzaXplJyxcclxuICBPTl9VTkxPQUQgPSAnb25VbmxvYWQnLFxyXG4gIE9OX1ZJRVdfUkVTRVQgPSAnb25WaWV3UmVzZXQnLFxyXG4gIE9OX1pPT01fRU5EID0gJ29uWm9vbUVuZCcsXHJcbiAgT05fWk9PTV9MRVZFTFNfQ0hBTkdFID0gJ29uWm9vbUxldmVsc0NoYW5nZScsXHJcbiAgT05fWk9PTV9TVEFSVCA9ICdvblpvb21TdGFydCcsXHJcbiAgT05fWk9PTSA9ICdvblpvb20nLFxyXG4gIE9OX01BUF9DTElDS0VEID0gJ29uTWFwQ2xpY2tlZCcsXHJcbiAgT05fTUFQX01BUktFUl9DTElDS0VEID0gJ29uTWFwTWFya2VyQ2xpY2tlZCdcclxufVxyXG5cclxuZXhwb3J0IGVudW0gQW5pbWF0aW9uVHlwZSB7XHJcbiAgQk9VTkNFID0gJ2JvdW5jZScsXHJcbiAgRkFERSA9ICdmYWRlJyxcclxuICBQVUxTRSA9ICdwdWxzZScsXHJcbiAgSlVNUCA9ICdqdW1wJyxcclxuICBTUElOID0gJ3NwaW4nLFxyXG4gIFdBR0dMRSA9ICd3YWdnbGUnXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwTWFya2VyQW5pbWF0aW9uIHtcclxuICB0eXBlOiBBbmltYXRpb25UeXBlO1xyXG4gIGR1cmF0aW9uPzogbnVtYmVyO1xyXG4gIGRlbGF5PzogbnVtYmVyO1xyXG4gIGRpcmVjdGlvbj86ICdub21hbCcgfCAncmV2ZXJzZScgfCAnYWx0ZXJuYXRlJyB8ICdhbHRlcm5hdGUtcmV2ZXJzZSc7XHJcbiAgaXRlcmF0aW9uQ291bnQ/OiBudW1iZXIgfCAnaW5maW5pdGUnO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcE1hcmtlciB7XHJcbiAgYW5pbWF0aW9uPzogTWFwTWFya2VyQW5pbWF0aW9uO1xyXG4gIGNvb3JkczogV2ViVmlld0xlYWZsZXRMYXRMbmc7XHJcbiAgZGl2SWNvbj86IEwuRGl2SWNvbjtcclxuICBpY29uOiBhbnk7XHJcbiAgaWNvbkFuY2hvcj86IFtudW1iZXIsIG51bWJlcl07XHJcbiAgaWQ/OiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgc2l6ZT86IFtudW1iZXIsIG51bWJlcl07XHJcbiAgdGl0bGU/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwTGF5ZXIge1xyXG4gIGlkPzogbnVtYmVyIHwgc3RyaW5nO1xyXG4gIGlzQmFzZUxheWVyPzogYm9vbGVhbjtcclxuICBpc0NoZWNrZWQ/OiBib29sZWFuOyAvLyBpZiB0aGUgbGF5ZXIgaXMgc2VsZWN0ZWQgaW4gdGhlIGxheWVyIHNlbGVjdGlvbiBjb250cm9sXHJcbiAgbmFtZT86IHN0cmluZzsgLy8gdGhlIG5hbWUgb2YgdGhlIGxheWVyLCB0aGlzIHdpbGwgYmUgc2VlbiBpbiB0aGUgbGF5ZXIgc2VsZWN0aW9uIGNvbnRyb2xcclxuICBvcGFjaXR5PzogbnVtYmVyO1xyXG4gIHR5cGU/OiBNYXBMYXllclR5cGVzIHwgTWFwVmVjdG9yTGF5ZXJUeXBlOyAvLyB0aGUgdHlwZSBvZiBsYXllciBhcyBzaG93biBhdCBodHRwczovL3JlYWN0LWxlYWZsZXQuanMub3JnL2RvY3MvZW4vY29tcG9uZW50cy5odG1sI3Jhc3Rlci1sYXllcnNcclxuICB6SW5kZXg/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwVmVjdG9yTGF5ZXIgZXh0ZW5kcyBNYXBMYXllciB7XHJcbiAgYXR0cmlidXRpb24/OiBzdHJpbmc7XHJcbiAgY29sb3I/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWFwVmVjdG9yTGF5ZXJDaXJjbGUgZXh0ZW5kcyBNYXBWZWN0b3JMYXllciB7XHJcbiAgY2VudGVyOiBXZWJWaWV3TGVhZmxldExhdExuZztcclxuICByYWRpdXM6IG51bWJlcjtcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcFZlY3RvckxheWVyQ2lyY2xlTWFya2VyIGV4dGVuZHMgTWFwVmVjdG9yTGF5ZXIge1xyXG4gIGNlbnRlcjogV2ViVmlld0xlYWZsZXRMYXRMbmc7XHJcbiAgcmFkaXVzOiBudW1iZXI7XHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBNYXBWZWN0b3JMYXllclBvbHlsaW5lIGV4dGVuZHMgTWFwVmVjdG9yTGF5ZXIge1xyXG4gIHBvc2l0aW9uczogV2ViVmlld0xlYWZsZXRMYXRMbmdbXSB8IFdlYlZpZXdMZWFmbGV0TGF0TG5nW11bXTtcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcFZlY3RvckxheWVyUG9seWdvbiBleHRlbmRzIE1hcFZlY3RvckxheWVyIHtcclxuICBwb3NpdGlvbnM6IFdlYlZpZXdMZWFmbGV0TGF0TG5nW10gfCBXZWJWaWV3TGVhZmxldExhdExuZ1tdW107XHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBNYXBWZWN0b3JMYXllclJlY3RhbmdsZSBleHRlbmRzIE1hcFZlY3RvckxheWVyIHtcclxuICBib3VuZHM6IFdlYlZpZXdMZWFmbGV0TGF0TG5nQm91bmRzO1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBNYXBWZWN0b3JMYXllclR5cGUge1xyXG4gIENJUkNMRSA9ICdDaXJjbGUnLFxyXG4gIENJUkNMRV9NQVJLRVIgPSAnQ2lyY2xlTWFya2VyJyxcclxuICBQT0xZTElORSA9ICdQb2x5bGluZScsXHJcbiAgUE9MWUdPTiA9ICdQb2x5Z29uJyxcclxuICBSRUNUQU5HTEUgPSAnUmVjdGFuZ2xlJ1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcFJhc3RlckxheWVyIGV4dGVuZHMgTWFwTGF5ZXIge1xyXG4gIC8vIGF0dHJpYnV0aW9uIHN0cmluZyB0byBiZSBzaG93biBmb3IgdGhpcyBsYXllclxyXG4gIGF0dHJpYnV0aW9uPzogc3RyaW5nOyAvLycmYW1wO2NvcHkgPGEgaHJlZj0mcXVvdDtodHRwOi8vb3NtLm9yZy9jb3B5cmlnaHQmcXVvdDs+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJ1xyXG4gIGJvdW5kcz86IFdlYlZpZXdMZWFmbGV0TGF0TG5nQm91bmRzO1xyXG4gIGxheWVycz86IE1hcExheWVyW10gfCBzdHJpbmc7XHJcbiAgcGxheT86IGJvb2xlYW47XHJcbiAgLy8gdXJsIG9mIHRpbGVzXHJcbiAgdXJsPzogc3RyaW5nOyAvL2BodHRwczovL2FwaS50aWxlcy5tYXBib3guY29tL3Y0L21hcGJveC5zdHJlZXRzL3t6fS97eH0ve3l9LnBuZz9hY2Nlc3NfdG9rZW49JHttYXBib3hUb2tlbn1gLFxyXG59XHJcblxyXG5leHBvcnQgZW51bSBNYXBMYXllclR5cGVzIHtcclxuICBJTUFHRV9MQVlFUiA9ICdJbWFnZU92ZXJsYXknLFxyXG4gIFRJTEVfTEFZRVIgPSAnVGlsZUxheWVyJyxcclxuICBWRUNUT1JfTEFZRVIgPSAnVmVjdG9yTGF5ZXInLFxyXG4gIFZJREVPX0xBWUVSID0gJ1ZpZGVvT3ZlcmxheScsXHJcbiAgV01TX1RJTEVfTEFZRVIgPSAnV01TVGlsZUxheWVyJ1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcFN0YXJ0dXBNZXNzYWdlIHtcclxuICByYXN0ZXJMYXllcnM/OiBNYXBSYXN0ZXJMYXllcltdO1xyXG4gIHZlY3RvckxheWVycz86IE1hcFZlY3RvckxheWVyW107XHJcbiAgbWFwTWFya2Vycz86IE1hcE1hcmtlcltdO1xyXG4gIG1hcENlbnRlckNvb3Jkcz86IFdlYlZpZXdMZWFmbGV0TGF0TG5nO1xyXG4gIHpvb20/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgV2ViVmlld0xlYWZsZXRMYXRMbmcge1xyXG4gIGxhdDogbnVtYmVyO1xyXG4gIGxuZzogbnVtYmVyO1xyXG59XHJcbmV4cG9ydCB0eXBlIFdlYlZpZXdMZWFmbGV0TGF0TG5nQm91bmRzID1cclxuICB8IFdlYlZpZXdMZWFmbGV0TGF0TG5nQm91bmRzQ29ybmVyc1xyXG4gIHwgV2ViVmlld0xlYWZsZXRMYXRMbmdbXTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgV2Vidmlld0xlYWZsZXRNZXNzYWdlIHtcclxuICBldmVudD86IGFueTtcclxuICBtc2c/OiBzdHJpbmc7XHJcbiAgZXJyb3I/OiBzdHJpbmc7XHJcbiAgcGF5bG9hZD86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXZWJWaWV3TGVhZmxldExhdExuZ0JvdW5kc0Nvcm5lcnMge1xyXG4gIHNvdXRoV2VzdDogV2ViVmlld0xlYWZsZXRMYXRMbmc7XHJcbiAgbm9ydGhFYXN0OiBXZWJWaWV3TGVhZmxldExhdExuZztcclxufVxyXG4iXX0=